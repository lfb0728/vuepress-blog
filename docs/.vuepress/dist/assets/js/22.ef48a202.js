(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{369:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-时光穿梭机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-时光穿梭机"}},[t._v("#")]),t._v(" Git 时光穿梭机")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"版本回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),a("p",[t._v("修改第一节中的文件内容，在练习提交一次到仓库中，然后在回到第一个版本")]),t._v(" "),a("p",[t._v("第一步：修改文件中的内容，如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Git is a distributed version control system.\nGit is free software distributed under the GPL.\n")])])]),a("p",[t._v("可以通过以下命令查看当前的状态和修改的内容。")]),t._v(" "),a("p",[t._v("文件的状态有六个，分别为 M：修改，A：已添加，D：已删除，R：重命名，C：复制，U：已更新但未装入")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" // 查看当前修改内容\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/readme.txt b/readme.txt\nindex d8036c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("99e0e11 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/readme.txt\n+++ b/readme.txt\n@@ -1,2 +1,2 @@\n-Git is a version control system.\n-Git is "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" software.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" No newline at end of "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n+Git is a distributed version control system.\n+Git is "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" software distributed under the GPL.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" No newline at end of "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s // 查看当前文件的状态\n M readme.txt // M 代表修改的意思\n")])])]),a("p",[t._v("第二步：提交到仓库中。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" readme.txt // 加入暂存区\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第二个版本"')]),t._v(" // 加入仓库，也就是版本库\n")])])]),a("p",[t._v("第三步：版本回退。")]),t._v(" "),a("p",[t._v("首先可以通过git log命令查看当前在哪个版本，在Git中，用HEAD表示当前版本。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\ncommit d6e43ffd957565579771b2f8f669b90204cc102e "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAuthor: lfb0728 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1449826851")]),t._v("@qq.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Sun May "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":34:38 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" +0800\n\n    第二个版本\n\ncommit 685bd3d84a3a3a0a493e32de2d522e84c924c6ed\nAuthor: lfb0728 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1449826851")]),t._v("@qq.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Sun May "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":25:42 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" +0800\n\n    第一个版本\n\n")])])]),a("p",[t._v("如上所说，在Git中，用HEAD表示当前版本，上一个版本就是HEAD^, 上上一个版本就是HEAD^^,当然往上100个版本写100个"),a("code",[t._v("^")]),t._v("比较容易数不过来，所以写成"),a("code",[t._v("HEAD~100")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD^ // 回到上一个版本\nHEAD is now at 685bd3d 第一个版本\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" readme.txt // 查看文件内容，可以看到我们已经回退到第一个版本了\nGit is a version control system.\nGit is "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" software.\n")])])]),a("p",[t._v("然后我们再次输入git log命令查看版本信息，发现只有一个版本了，要怎么回到刚刚呢？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git log\ncommit 685bd3d84a3a3a0a493e32de2d522e84c924c6ed (HEAD -> master)\nAuthor: lfb0728 <1449826851@qq.com>\nDate:   Sun May 17 17:25:42 2020 +0800\n第一个版本\n")])])]),a("p",[t._v("要想回到第二个版本呢，要找到第二个版本的commit id，可以通过git reflog查看你使用的每一次命令。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog\n685bd3d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": reset: moving to HEAD^\nd6e43ff HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": reset: moving to HEAD\nd6e43ff HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: 第二个版本\n685bd3d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": 第一个版本\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard d6e43ff // 这样就又回到了刚刚的版本了\nHEAD is now at d6e43ff 第二个版本\n")])])]),a("p",[t._v("总结一下：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("HEAD")]),t._v("指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令"),a("code",[t._v("git reset --hard commit_id")]),t._v("。")]),t._v(" "),a("li",[t._v("穿梭前，用"),a("code",[t._v("git log")]),t._v("可以查看提交历史，以便确定要回退到哪个版本。")]),t._v(" "),a("li",[t._v("要重返未来，用"),a("code",[t._v("git reflog")]),t._v("查看命令历史，以便确定要回到未来的哪个版本")])])])}),[],!1,null,null,null);s.default=e.exports}}]);