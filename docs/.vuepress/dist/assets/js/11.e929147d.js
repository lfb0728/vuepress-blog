(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{352:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("p",[t._v("Git是目前世上最先进的分布式版本控制系统。Linus使用c语言写了这么一个分布式版本控制系统。")]),t._v(" "),a("h2",{attrs:{id:"集中式版本控制系统和分布式版本控制系统的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集中式版本控制系统和分布式版本控制系统的区别"}},[t._v("#")]),t._v(" 集中式版本控制系统和分布式版本控制系统的区别")]),t._v(" "),a("p",[t._v("集中式：有一个中央服务器存储最新的版本库，就好比一个图书馆，你要改一本书，就要先借出来，然后改完在放回图书馆。必须要联网才能工作，网速慢的话，提交需要很长的时间。")]),t._v(" "),a("p",[t._v("分布式：没有中央服务器这么一说，每一个人的电脑上都存储一个完整的版本库，就不需要联网工作，安全性也高，就算某个人的电脑坏了，从别人那边复制一个过来就可以用了。分布式也有一台充当“中央服务器”的电脑来交换大家的修改内容，你的提交只会提交与线上不同的地方，也就是有修改的地方。")]),t._v(" "),a("h2",{attrs:{id:"git安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git安装"}},[t._v("#")]),t._v(" Git安装")]),t._v(" "),a("p",[t._v("window安装："),a("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git官网下载地址"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("安装完成后，在桌面右键能看见一个“Git Bash”点击会弹出一个命令行窗口。")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C14498%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200515231806132.png",alt:"image-20200515231806132"}})]),t._v(" "),a("h2",{attrs:{id:"创建版本库（repository）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建版本库（repository）"}},[t._v("#")]),t._v(" 创建版本库（repository）")]),t._v(" "),a("p",[t._v("可以理解成一个目录，这里面的所有文件都被git管理，每个文件的修改 删除，git都能跟踪，以便任何时刻都能追踪历史，或者将来某个时刻可以“回退”或者说“还原”。")]),t._v(" "),a("p",[t._v("创建版本库，第一步：打开”Git Bash“ 输入以下命令先创建一个空目录，切换再到这个目录中。第二步：输入git init命令就会把这个目录变成Git的版本库。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" GitDemo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" GitDemo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),t._v(" 可以显示当前所在的目录 \n/c/Users/14498/Desktop/GitDemo\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\nInitialized empty Git repository "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" C:/Users/14498/Desktop/GitDemo/.git/\n")])])]),a("p",[t._v("打开创建的文件夹就能看见一个.git的隐藏文件，如果看不见，可以打开下图中的隐藏项目。")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C14498%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200515232941015.png",alt:"image-20200515232941015"}})]),t._v(" "),a("h2",{attrs:{id:"把文件添加到版本库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把文件添加到版本库"}},[t._v("#")]),t._v(" 把文件添加到版本库")]),t._v(" "),a("p",[t._v("所有的版本控制系统，只能跟踪文本文件的改动，比如TXT文件，网页，程序代码等等。无法跟踪二进制文件，所以要使用版本控制系统，就要以纯文本方式编写文件。建议使用标准的UTF-8编码。")]),t._v(" "),a("p",[t._v("首先先来理解下Git工作区，暂存区和版本库的概念。")]),t._v(" "),a("p",[a("strong",[t._v("工作区")]),t._v("：就是电脑里能看到的目录。")]),t._v(" "),a("p",[a("strong",[t._v("暂存区")]),t._v("：英文名叫stage，或者index。一般存放在“.git”隐藏目录下的index文件中，简称暂存区或者索引。")]),t._v(" "),a("p",[a("strong",[t._v("版本库")]),t._v("：工作区有一个隐藏目录.git，就是GIt的版本库。")]),t._v(" "),a("p",[t._v("然后在创建的目录中添加一个readme.txt文件，可以添加如下内容：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Git is a version control system.\nGit is free software.\n")])])]),a("p",[t._v("把文件放到Git仓库只需要两步")]),t._v(" "),a("p",[t._v("第一步：用git add 把文件添加到暂存区，“git add .“可以把所有的文件加到暂存区。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" readme.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s 查看添加到暂存区的文件\nA readme.txt\n")])])]),a("p",[t._v("第二步：用git commit把文件添加到本地仓库中。")]),t._v(" "),a("p",[t._v("Git 会为你的每一个提交都记录你的名字与电子邮箱地址，所以需要配置用户名和邮箱地址。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你的github用户名'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email 你的邮箱地址\n// 使用git commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交信息'")]),t._v("来提交到仓库中\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第一次版本信息'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root-commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 87c9366"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 第一次版本信息\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" readme.txt\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);